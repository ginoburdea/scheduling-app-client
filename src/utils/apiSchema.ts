/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    '/users/register': {
        post: operations['UsersController_register']
    }
    '/users/log-in': {
        post: operations['UsersController_logIn']
    }
    '/users/log-out': {
        post: operations['UsersController_logOut']
    }
    '/calendars': {
        get: operations['CalendarsController_getCalendarInfo']
        put: operations['CalendarsController_register']
    }
    '/calendars/available-days': {
        get: operations['CalendarsController_getAvailableDays']
    }
    '/calendars/available-spots': {
        get: operations['CalendarsController_getAvailableSpots']
    }
    '/calendars/set-appointment': {
        post: operations['CalendarsController_setAppointment']
    }
    '/calendars/appointments': {
        get: operations['CalendarsController_getAppointments']
    }
    '/calendars/appointment': {
        get: operations['CalendarsController_getAppointmentInfo']
    }
}

export type webhooks = Record<string, never>

export interface components {
    schemas: {
        ErrorDto: {
            statusCode: number
            message: string
            error?: string
        }
        AuthDto: {
            email: string
            password: string
        }
        AuthRes: {
            calendarId: string
            userEmail: string
            session: string
            /** Format: date-time */
            sessionExpiresAt: string
        }
        PartialCalendar: {
            businessName?: string
            businessDescription?: string
            dayStartsAt?: string
            dayEndsAt?: string
            breakBetweenBookings?: number
            bookingDuration?: number
            bookInAdvance?: number
            workingDays?: number[]
        }
        UpdateCalendarDto: {
            id: string
            updates: components['schemas']['PartialCalendar']
        }
        UpdateCalendarRes: {
            businessName: string
            businessDescription: string
            dayStartsAt: string
            dayEndsAt: string
            breakBetweenBookings: number
            bookingDuration: number
            bookInAdvance: number
            workingDays: number[]
        }
        GetCalendarInfoRes: {
            businessName: string
            businessDescription: string
        }
        GetAvailableDaysRes: {
            dates: string
        }
        SetAppointmentDto: {
            calendarId: string
            /** Format: date-time */
            date: string
            name: string
            phoneNumber: string
        }
        SetAppointmentRes: {
            /** Format: date-time */
            date: string
            phoneNumber: string
            name: string
        }
        GetAppointmentsRes: {
            appointments: string[]
        }
        GetAppointmentInfoRes: {
            clientName: string
            clientPhoneNumber: string
        }
    }
    responses: never
    parameters: never
    requestBodies: never
    headers: never
    pathItems: never
}

export type external = Record<string, never>

export interface operations {
    UsersController_register: {
        requestBody: {
            content: {
                'application/json': components['schemas']['AuthDto']
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['AuthRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    UsersController_logIn: {
        requestBody: {
            content: {
                'application/json': components['schemas']['AuthDto']
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['AuthRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    UsersController_logOut: {
        responses: {
            201: never
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    CalendarsController_getCalendarInfo: {
        parameters: {
            query: {
                id: string
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['GetCalendarInfoRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    CalendarsController_register: {
        requestBody: {
            content: {
                'application/json': components['schemas']['UpdateCalendarDto']
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['UpdateCalendarRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    CalendarsController_getAvailableDays: {
        parameters: {
            query: {
                calendarId: string
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['GetAvailableDaysRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    CalendarsController_getAvailableSpots: {
        parameters: {
            query: {
                date: string
                calendarId: string
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['GetAvailableDaysRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    CalendarsController_setAppointment: {
        requestBody: {
            content: {
                'application/json': components['schemas']['SetAppointmentDto']
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['SetAppointmentRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    CalendarsController_getAppointments: {
        parameters: {
            query: {
                month: number
                year: number
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['GetAppointmentsRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    CalendarsController_getAppointmentInfo: {
        parameters: {
            query: {
                appointmentId: number
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['GetAppointmentInfoRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
}
