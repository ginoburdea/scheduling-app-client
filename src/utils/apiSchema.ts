/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    '/users/register': {
        post: operations['UsersController_register']
    }
    '/users/log-in': {
        post: operations['UsersController_logIn']
    }
    '/users/log-out': {
        post: operations['UsersController_logOut']
    }
    '/calendars/settings': {
        get: operations['CalendarsController_getCalendarSettings']
    }
    '/calendars': {
        get: operations['CalendarsController_getCalendarInfo']
        put: operations['CalendarsController_updateCalendar']
    }
    '/calendars/available-days': {
        get: operations['CalendarsController_getAvailableDays']
    }
    '/calendars/available-spots': {
        get: operations['CalendarsController_getAvailableSpots']
    }
    '/calendars/set-appointment': {
        post: operations['CalendarsController_setAppointment']
    }
    '/calendars/appointments': {
        get: operations['CalendarsController_getAppointments']
    }
    '/calendars/appointment': {
        get: operations['CalendarsController_getAppointmentInfo']
    }
}

export type webhooks = Record<string, never>

export interface components {
    schemas: {
        ErrorDto: {
            /** @example 400 */
            statusCode: number
            /** @example email is required */
            message: string
            /** @example Bad request */
            error?: string
        }
        AuthDto: {
            /** Format: email */
            email: string
            /** @example U5@!d3r78%m%zb*c */
            password: string
        }
        AuthRes: {
            /** Format: uuid */
            calendarId: string
            /** Format: email */
            userEmail: string
            /** @example mu5bKH*@dfC2^!N22LjG8Lf@QoCye^D8om%gMVn!D@n5paLeZq#^xW6XS%6gqTJ9 */
            session: string
            /** Format: date-time */
            sessionExpiresAt: string
        }
        GetCalendarSettingsRes: {
            /** @example Lorem Ipsum Inc. */
            businessName: string
            /** @example Lorem ipsum dolor sit amet, consectetur adipiscing elit */
            businessDescription: string
            /** @example 09:00 */
            dayStartsAt: string
            /** @example 17:00 */
            dayEndsAt: string
            /** @example 5 */
            breakBetweenBookings: number
            /** @example 25 */
            bookingDuration: number
            /** @example 14 */
            bookInAdvance: number
            /**
             * @example [
             *   0,
             *   1,
             *   2,
             *   3,
             *   4
             * ]
             */
            workingDays: number[]
        }
        PartialCalendar: {
            /** @example Lorem Ipsum Inc. */
            businessName?: string
            /** @example Lorem ipsum dolor sit amet, consectetur adipiscing elit */
            businessDescription?: string
            /** @example 09:00 */
            dayStartsAt?: string
            /** @example 17:00 */
            dayEndsAt?: string
            /** @example 5 */
            breakBetweenBookings?: number
            /** @example 25 */
            bookingDuration?: number
            /** @example 14 */
            bookInAdvance?: number
            /**
             * @example [
             *   0,
             *   1,
             *   2,
             *   3,
             *   4
             * ]
             */
            workingDays?: number[]
        }
        UpdateCalendarDto: {
            /** Format: uuid */
            id: string
            updates: components['schemas']['PartialCalendar']
        }
        UpdateCalendarRes: {
            /** @example Lorem Ipsum Inc. */
            businessName: string
            /** @example Lorem ipsum dolor sit amet, consectetur adipiscing elit */
            businessDescription: string
            /** @example 09:00 */
            dayStartsAt: string
            /** @example 17:00 */
            dayEndsAt: string
            /** @example 5 */
            breakBetweenBookings: number
            /** @example 25 */
            bookingDuration: number
            /** @example 14 */
            bookInAdvance: number
            /**
             * @example [
             *   0,
             *   1,
             *   2,
             *   3,
             *   4
             * ]
             */
            workingDays: number[]
        }
        GetCalendarInfoRes: {
            /** @example Lorem Ipsum Inc. */
            businessName: string
            /** @example Lorem ipsum dolor sit amet, consectetur adipiscing elit */
            businessDescription: string
        }
        GetAvailableDaysRes: {
            dates: string[]
        }
        GetAvailableSpotsRes: {
            spots: string[]
        }
        SetAppointmentDto: {
            /** Format: uuid */
            calendarId: string
            /** Format: date-time */
            date: string
            /** @example John Doe */
            name: string
            /** @example +4 0700 000 000 */
            phoneNumber: string
        }
        SetAppointmentRes: {
            /** Format: date-time */
            date: string
            /** @example +4 0700 000 000 */
            phoneNumber: string
            /** @example John Doe */
            name: string
        }
        MiniAppointment: {
            /** @example 175 */
            id: number
            /** Format: date-time */
            startsAt: string
            /** Format: date-time */
            endsAt: string
        }
        Appointment: {
            /** Format: date-time */
            day: string
            appointments: components['schemas']['MiniAppointment'][]
        }
        GetAppointmentsRes: {
            appointments: components['schemas']['Appointment'][]
        }
        GetAppointmentInfoRes: {
            /** @example John Doe */
            clientName: string
            /** @example +4 0700 000 000 */
            clientPhoneNumber: string
        }
    }
    responses: never
    parameters: never
    requestBodies: never
    headers: never
    pathItems: never
}

export type external = Record<string, never>

export interface operations {
    UsersController_register: {
        requestBody: {
            content: {
                'application/json': components['schemas']['AuthDto']
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['AuthRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    UsersController_logIn: {
        requestBody: {
            content: {
                'application/json': components['schemas']['AuthDto']
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['AuthRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    UsersController_logOut: {
        responses: {
            201: never
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    CalendarsController_getCalendarSettings: {
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['GetCalendarSettingsRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    CalendarsController_getCalendarInfo: {
        parameters: {
            query: {
                id: string
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['GetCalendarInfoRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    CalendarsController_updateCalendar: {
        requestBody: {
            content: {
                'application/json': components['schemas']['UpdateCalendarDto']
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['UpdateCalendarRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    CalendarsController_getAvailableDays: {
        parameters: {
            query: {
                calendarId: string
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['GetAvailableDaysRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    CalendarsController_getAvailableSpots: {
        parameters: {
            query: {
                date: string
                calendarId: string
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['GetAvailableSpotsRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    CalendarsController_setAppointment: {
        requestBody: {
            content: {
                'application/json': components['schemas']['SetAppointmentDto']
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['SetAppointmentRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    CalendarsController_getAppointments: {
        parameters: {
            query: {
                atOrAfter: string
                atOrBefore: string
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['GetAppointmentsRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
    CalendarsController_getAppointmentInfo: {
        parameters: {
            /** @example 175 */
            query: {
                appointmentId: number
            }
        }
        responses: {
            200: {
                content: {
                    'application/json': components['schemas']['GetAppointmentInfoRes']
                }
            }
            default: {
                content: {
                    'application/json': components['schemas']['ErrorDto']
                }
            }
        }
    }
}
